package day0413;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import kr.co.sist.dao.DbConnection;

public class Work0412DAO {
	
	private static Work0412DAO wDAO;
	
	private Work0412DAO() {
		
	}//Work0412DAO
	
	public static Work0412DAO getInstance() {//singleton
		if( wDAO == null ) {
			wDAO = new Work0412DAO();
		}//end if
		return wDAO;
	}//getInstance
	
	/**
	 * 모든 레코드 조회
	 * @return
	 * @throws SQLException
	 */
	public List<WorkAllVO> selectAllWork() throws SQLException{
		List<WorkAllVO> list = new ArrayList<WorkAllVO>();
		
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		DbConnection dc = DbConnection.getInstance();
		//1. 
		try {
		//2.
			con = dc.getConnection();
		//3.
			String selectWork = "select num, name, age, addr from work order by num";
			pstmt = con.prepareStatement(selectWork);
		//4. 
			// (bind변수없으니 스킵)
		//5.
			rs = pstmt.executeQuery();
			
			WorkAllVO waVO = null;
			while( rs.next() ) {
				//커서가 존재하는 레코드 위치에 컬럼값을 받아와서 VO에 설정한다
				waVO = new WorkAllVO(rs.getInt("num"), rs.getString("name"), rs.getInt("age"), rs.getString("addr"));
				//레코드의 정보를 가진 VO를 list에 추가한다
				list.add(waVO);
			}//end while
			
		} finally {
		//6.
			dc.close(rs, pstmt, con);
		}//end finally
		
		return list;
	}//selectAllWork
	
	/**
	 * 레코드 추가
	 * @param waVO
	 * @throws SQLException
	 */
	public void insertWork(WorkAddVO waVO) throws SQLException{
		
		Connection con = null;
		PreparedStatement pstmt = null;

		DbConnection dc = DbConnection.getInstance();
		//1.
		try {
		//2.
			con = dc.getConnection();
		//3.
			String insertWork = "insert into work(num,name,age,addr)values(seq_work.nextval, ?, ?, ?)";
			pstmt = con.prepareStatement(insertWork);
		//4.
			pstmt.setString(1, waVO.getName());
			pstmt.setInt(2, waVO.getAge());
			pstmt.setString(3, waVO.getAddr());
		//5.
			pstmt.executeUpdate();
		}finally {
		//6.
			dc.close(null, pstmt, con);
		}//end finally
		
	}//insertWork
	
}//class

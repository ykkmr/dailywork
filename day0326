-------------------------------join----------------------------------------
-- 부서에 사원이 존재하는 경우에만
-- 사원번호, 사원명, 입사일, 부서번호, 부서명, 위치 조회
-- ANSI
-- 양쪽 테이블에 존재하는 컬럼은 컬럼명을 사용할 때 테이블명.컬럼명을 사용한다
-- 컬럼이 어떤 테이블에 존재하는지 알기 어렵다 (단점)
select empno, ename, hiredate, emp.deptno, dname, loc
from   dept
inner  join emp
on     emp.deptno=dept.deptno;

-- 컬럼이 어떤 테이블에 존재하는지 알 수 있도록 컬럼명 앞에 테이블명을
-- 명시하여 사용
-- 조회컬럼에 작성하는 코딩량이 늘어난다 (조회컬럼이 너무 지저분해짐) (단점)
select emp.empno, emp.ename, emp.hiredate, emp.deptno, dept.dname, dept.loc
from   dept
inner  join emp
on     emp.deptno=dept.deptno;

-- 테이블명에 alias를 부여하여 컬럼이 속한 테이블을 명시하고, 짧은 코드로 사용할 수 있게 된다.
-- 테이블명에 alias를 부여 : 테이블명 alias

-- ANSI
select e.empno, e.ename, e.hiredate, e.deptno, d.dname, d.loc
from   dept d
inner  join emp e
on     e.deptno=d.deptno;

-- Oracle
select e.empno, e.ename, e.hiredate, e.deptno, d.dname, d.loc
from   dept d, emp e
where  e.deptno=d.deptno;


-- 연봉이 1000 이상 3000 이하인 사원들의
-- 사원번호, 사원명, 연봉, 입사일, 부서번호, 부서명, 위치를 조회
select      e.empno, e.ename, e.sal, e.hiredate, d.deptno, d.dname, d.loc
from        emp e
inner join  dept d
on          e.deptno=d.deptno
where       e.sal between 1000 and 3000
order by sal;

-- Oracle -> where에서 구분소스를 괄호로 구분한다
select e.empno, e.ename, e.hiredate, e.deptno, d.dname, d.loc
from   dept d, emp e
where  (e.deptno=d.deptno) and e.sal between 1000 and 3000
order by e.sal;

-- 보유중인 차량에서 배기량이 1600이상 3000 이하인 모든 차량의
-- 제조사, 모델명, 연식, 배기량, 가격을 조회

select * from CAR_MAKER ;
select * from CAR_MODEL  ;

-- ANSI
select       r.maker, r.model, l.car_year, l.cc, l.price
from         car_model  l
inner join   car_maker  r
on           r.model=l.model
where        l.cc between 1600 and 3000
order by cc;

-- Oracle
select     cma.maker, cma.model, cmo.car_year, cmo.cc, cmo.price
from       car_maker cma, car_model cmo
where      (cmo.model=cma.model) and cmo.cc between 1600 and 3000
order by   cmo.cc;

--- 테이블 3개 join
-- 사원번호, 사원명, 연봉, 부서번호, 부서명, 위치, 우편번호, 시도, 구군, 동
-- 사원테이블의 사원번호와 우편번호 테이블의  seq를 join조건으로 사용

-- ANSI
select      e.empno, e.ename, e.sal, d.deptno, d.dname, d.loc, z.zipcode, z.sido, z.gugun, z.dong
from        dept d
inner join  emp  e
on          e.deptno=d.deptno
inner join  zipcode z
on          z.seq = e.empno;

-- Oracle
select      e.empno, e.ename, e.sal, d.deptno, d.dname, d.loc, z.zipcode, z.sido, z.gugun, z.dong
from        emp e, dept d, zipcode z
where       e.deptno = d.deptno and z.seq = e.empno;
